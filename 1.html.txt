import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from datetime import datetime

# ====== 1. 模拟数据生成 ======
# 生成2012-2023年的月度销售数据
np.random.seed(42)
date_rng = pd.date_range(start='2012-04-01', end='2023-12-31', freq='M')
quarters = ['Q2-2012'] + [f'Q{(i%4)+1}-{2012+i//4}' for i in range(1, len(date_rng))]

# 模拟销售量（万台）
base_sales = np.random.normal(loc=50, scale=10, size=len(date_rng)).cumsum()
seasonality = 20 * np.sin(np.linspace(0, 4*np.pi, len(date_rng)))
marketing_boost = np.random.choice([0, 15, 30], size=len(date_rng), p=[0.6, 0.3, 0.1])
sales = np.abs(base_sales + seasonality + marketing_boost).astype(int)

# 创建DataFrame
df = pd.DataFrame({
    'Date': date_rng,
    'Quarter': quarters[:len(date_rng)],
    'Sales_Volume': sales,
    'Marketing_Cost': np.random.randint(50, 200, size=len(date_rng)),
    'Customer_Growth': np.random.randint(5, 20, size=len(date_rng)).cumsum()
})

# ====== 2. 数据分析 ======
# 计算同比增长率
df['Year'] = df['Date'].dt.year
annual_sales = df.groupby('Year')['Sales_Volume'].sum().pct_change().dropna()

# ====== 3. 数据可视化 ======
plt.figure(figsize=(14, 8))

# 销售趋势图
plt.subplot(2,2,1)
plt.plot(df['Date'], df['Sales_Volume'], color='#2c7fb8')
plt.title('Monthly Sales Trend (2012-2023)')
plt.xlabel('Year')
plt.ylabel('Sales Volume (10k units)')
plt.grid(alpha=0.3)

# 年度增长率
plt.subplot(2,2,2)
plt.bar(annual_sales.index, annual_sales.values*100, color='#31a354')
plt.title('Annual Sales Growth Rate')
plt.xlabel('Year')
plt.ylabel('Growth Rate (%)')
plt.grid(axis='y', alpha=0.3)

# 营销与销售关系
plt.subplot(2,2,3)
plt.scatter(df['Marketing_Cost'], df['Sales_Volume'], 
           c=df['Customer_Growth'], cmap='viridis', alpha=0.7)
plt.colorbar(label='Customer Growth')
plt.title('Marketing vs Sales')
plt.xlabel('Marketing Cost (10k RMB)')
plt.ylabel('Sales Volume (10k units)')

# ====== 4. 销售预测模型 ======
# 准备时间序列数据
X = np.array(range(len(df))).reshape(-1,1)
y = df['Sales_Volume'].values

# 训练预测模型
model = LinearRegression()
model.fit(X, y)

# 生成预测数据
future_months = 12
X_future = np.array(range(len(df), len(df)+future_months)).reshape(-1,1)
forecast = model.predict(X_future)

# 预测结果可视化
plt.subplot(2,2,4)
plt.plot(df['Date'], y, label='Historical')
plt.plot(pd.date_range(start=df['Date'].iloc[-1], periods=future_months+1, freq='M')[1:], 
        forecast, 'r--', label='Forecast')
plt.title('Sales Forecast')
plt.xlabel('Year')
plt.ylabel('Sales Volume (10k units)')
plt.legend()
plt.grid(alpha=0.3)

plt.tight_layout()
plt.show()

# ====== 5. 关键指标输出 ======
print("\n关键业务指标:")
print(f"- 历史最高单月销量: {df['Sales_Volume'].max()} 万台")
print(f"- 2023年平均月销量: {df[df['Year']==2023]['Sales_Volume'].mean():.1f} 万台")
print(f"- 客户年均增长率: {df['Customer_Growth'].pct_change().mean()*100:.1f}%")
print(f"- 预测2024年Q1销量: {forecast[:3].mean():.0f} ± {forecast[:3].std():.0f} 万台")